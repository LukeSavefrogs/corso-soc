FROM ubuntu:latest AS base
LABEL maintainer="Luca Salvarani <lucasalvarani99@gmail.com>"

ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PAGER=less

ARG PYTHON_VERSION=3.12

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Unminimize the image
RUN apt-get update \
    && apt-get install --no-install-recommends --yes \
        unminimize \
    && (yes || true) | unminimize

# Install system dependencies
RUN apt-get update \
    && apt-get install --no-install-recommends --yes \
        bash \
        binutils \
        curl \
        jq \
        iproute2 \
        less \
        lsof \
        man-db \
        net-tools \
        netcat-traditional \
        openssh-server \
        sudo \
        rsync \
        rsyslog \
        tzdata \
        unzip \
        vim \
        wget \
    && rm -rf /var/cache/apk/*

RUN service ssh start

# Install Python - https://stackoverflow.com/a/70866416/8965861
RUN apt-get update && \
    apt-get install --yes software-properties-common && \
    add-apt-repository --yes ppa:deadsnakes/ppa && \
    apt-get update && \
    apt install --yes "python${PYTHON_VERSION}"

RUN <<EOF
    #!/bin/bash
    # Disable the default MOTD
    true > /etc/motd
    true > /etc/legal
    # Check and configure rsyncd.conf
    rsync --version >/dev/null 2>&1 || exit 100

    {
        echo "lock file = /var/run/rsync.lock";
        echo "log file = /var/log/rsyncd.log";
        echo "pid file = /var/run/rsyncd.pid";
    } > /etc/rsyncd.conf;

    # Start the rsync daemon
    rsync --daemon;

    # Allow SSH access
    mkdir /var/run/sshd \
        && ssh-keygen -A \
        && echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config \
   ;

    # Setup the skeleton folder
    [[ -d /etc/skel ]] || mkdir /etc/skel

    {
        # echo "export PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '";
        echo "alias ls='ls --color=auto'";
        echo "alias ll='ls -l'";
        echo "alias la='ls -la'";
        echo "alias rm='rm -i'";
        echo "alias cp='cp -i'";
        echo "alias mv='mv -i'";
    } >> /etc/skel/.bashrc

    echo "au FileType sh setlocal fo-=c fo-=r fo-=o" > /etc/skel/.vimrc
    
    # Change the motd
    rm -rf /etc/update-motd.d/*;
    {
        echo '#!/bin/bash';
        echo '__columns=80';
        echo '__username="$(ps -x | grep "$(grep PPid /proc/$(grep PPid /proc/$PPID/status | awk "{ print \$2 }")/status | awk "{ print \$2 }")" | awk "{ print \$6 }" | sed "s/[[:digit:].-]//g" | head -n 1)"';
        echo '__fullname="$(getent passwd $__username | cut -d: -f5 | cut -d, -f1)"';
        echo 'for ((i=1; i<=__columns; i++)); do printf "*"; done; echo ""';
        echo 'echo -e ""';
        echo 'echo -e "Benvenuto nel server di sviluppo $__fullname ($__username)!"';
        echo 'echo -e "Sentiti libero di esplorare e sperimentare."';
        echo 'echo -e ""';
        echo 'echo -e "RICORDA:"';
        echo 'echo -e "     1. Nessun file salvato in questa macchina è privato, non salvare dati sensibili."';
        echo 'echo -e "     2. Tutti i file vengono cancellati ad ogni riavvio, assicurati di fare un backup."';
        echo 'echo -e "     3. Questo server è pubblico, non fare nulla di illegale :)"';
        echo 'echo -e ""';
        echo 'for ((i=1; i<=__columns; i++)); do printf "*"; done';
    } > /etc/update-motd.d/00-welcome-user && chmod +x /etc/update-motd.d/00-welcome-user
EOF

FROM base AS customization

# Setup SUDO access
RUN <<EOF
    #!/bin/bash
    # Allow using sudo to become root to members of the wheel group
    sed -ir 's/^# auth *required *pam_wheel.so/auth required pam_wheel.so/' /etc/pam.d/su

    # https://askubuntu.com/a/1404228/952581
    {
        echo "#";
        echo "# /etc/pam.d/common-auth - authentication settings common to all services";
        echo "#";
        echo "auth    required pam_faillock.so preauth audit silent deny=5 unlock_time=900";
        echo "auth    [success=1 default=ignore]      pam_unix.so nullok";
        echo "auth    [default=die] pam_faillock.so authfail audit deny=5 unlock_time=900";
        echo "auth    sufficient pam_faillock.so authsucc audit deny=5 unlock_time=900";
        echo "auth    requisite                       pam_deny.so";
        echo "auth    required                        pam_permit.so";
        echo "auth    optional                        pam_cap.so";
    } > /etc/pam.d/common-auth

    {
        echo "#";
        echo "# /etc/pam.d/common-account - authorization settings common to all services";
        echo "#";
        echo "account [success=1 new_authtok_reqd=done default=ignore]        pam_unix.so";
        echo "account requisite                       pam_deny.so";
        echo "account required                        pam_permit.so";
        echo "account    required pam_faillock.so";
    } > /etc/pam.d/common-account
    
    printf "audit\ndeny = 3\nunlock_time = 0\n" > /etc/security/faillock.conf
EOF

# Create the needed groups
RUN xargs -n 1 groupadd <<< "teachers students"

# Create the needed users
RUN useradd lsalvarani \
        --create-home \
        --groups teachers,sudo \
        --comment "Luca Salvarani" \
        --home-dir /home/lsalvarani \
        --shell /bin/bash \
    && echo -n 'lsalvarani:zaq12wsx' | chpasswd

# Expose the SSH port
EXPOSE 22

# Start SSH server on container startup
CMD ["/usr/sbin/sshd", "-D", "-o", "LogLevel=DEBUG3"]